import { Component, ElementRef, Input, NgModule } from '@angular/core';
import QRious from 'qrious';

import * as ɵngcc0 from '@angular/core';
var QRCodeComponent = (function () {
    /**
     * @param {?} elementRef
     */
    function QRCodeComponent(elementRef) {
        this.elementRef = elementRef;
        this.background = 'white';
        this.backgroundAlpha = 1.0;
        this.foreground = 'black';
        this.foregroundAlpha = 1.0;
        this.level = 'L';
        this.mime = 'image/png';
        this.padding = null;
        this.size = 100;
        this.value = '';
        this.canvas = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    QRCodeComponent.prototype.ngOnChanges = function (changes) {
        if ('background' in changes ||
            'backgroundAlpha' in changes ||
            'foreground' in changes ||
            'foregroundAlpha' in changes ||
            'level' in changes ||
            'mime' in changes ||
            'padding' in changes ||
            'size' in changes ||
            'value' in changes ||
            'canvas' in changes) {
            this.generate();
        }
    };
    /**
     * @return {?}
     */
    QRCodeComponent.prototype.generate = function () {
        try {
            var /** @type {?} */ el = this.elementRef.nativeElement;
            el.innerHTML = '';
            var /** @type {?} */ qr = new QRious({
                background: this.background,
                backgroundAlpha: this.backgroundAlpha,
                foreground: this.foreground,
                foregroundAlpha: this.foregroundAlpha,
                level: this.level,
                mime: this.mime,
                padding: this.padding,
                size: this.size,
                value: this.value
            });
            if (this.canvas) {
                el.appendChild(qr.canvas);
            }
            else {
                el.appendChild(qr.image);
            }
        }
        catch (e) {
            console.error("Could not generate QR Code: " + e.message);
        }
    };
QRCodeComponent.ɵfac = function QRCodeComponent_Factory(t) { return new (t || QRCodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
QRCodeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QRCodeComponent, selectors: [["qr-code"]], inputs: { background: "background", backgroundAlpha: "backgroundAlpha", foreground: "foreground", foregroundAlpha: "foregroundAlpha", level: "level", mime: "mime", padding: "padding", size: "size", value: "value", canvas: "canvas" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function QRCodeComponent_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QRCodeComponent, [{
        type: Component,
        args: [{
                moduleId: 'module.id',
                selector: 'qr-code',
                template: ""
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { background: [{
            type: Input
        }], backgroundAlpha: [{
            type: Input
        }], foreground: [{
            type: Input
        }], foregroundAlpha: [{
            type: Input
        }], level: [{
            type: Input
        }], mime: [{
            type: Input
        }], padding: [{
            type: Input
        }], size: [{
            type: Input
        }], value: [{
            type: Input
        }], canvas: [{
            type: Input
        }] }); })();
    return QRCodeComponent;
}());
/**
 * @nocollapse
 */
QRCodeComponent.ctorParameters = function () { return [
    { type: ElementRef, },
]; };
QRCodeComponent.propDecorators = {
    'background': [{ type: Input },],
    'backgroundAlpha': [{ type: Input },],
    'foreground': [{ type: Input },],
    'foregroundAlpha': [{ type: Input },],
    'level': [{ type: Input },],
    'mime': [{ type: Input },],
    'padding': [{ type: Input },],
    'size': [{ type: Input },],
    'value': [{ type: Input },],
    'canvas': [{ type: Input },],
};
var QRCodeModule = (function () {
    function QRCodeModule() {
    }
QRCodeModule.ɵfac = function QRCodeModule_Factory(t) { return new (t || QRCodeModule)(); };
QRCodeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: QRCodeModule });
QRCodeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QRCodeModule, [{
        type: NgModule,
        args: [{
                exports: [QRCodeComponent],
                declarations: [QRCodeComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QRCodeModule, { declarations: [QRCodeComponent], exports: [QRCodeComponent] }); })();
    return QRCodeModule;
}());
/**
 * @nocollapse
 */
QRCodeModule.ctorParameters = function () { return []; };

/**
 * Generated bundle index. Do not edit.
 */

export { QRCodeComponent, QRCodeModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjItcXJjb2RlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyMi1xcmNvZGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQU07QUFDTjtBQUNBLEtBT0U7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7O2lMQUFLO0FBQ0w7QUFDQSxLQU1FO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IFFSaW91cyBmcm9tICdxcmlvdXMnO1xuXG52YXIgUVJDb2RlQ29tcG9uZW50ID0gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez99IGVsZW1lbnRSZWZcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBRUkNvZGVDb21wb25lbnQoZWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnRSZWYgPSBlbGVtZW50UmVmO1xuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSAnd2hpdGUnO1xuICAgICAgICB0aGlzLmJhY2tncm91bmRBbHBoYSA9IDEuMDtcbiAgICAgICAgdGhpcy5mb3JlZ3JvdW5kID0gJ2JsYWNrJztcbiAgICAgICAgdGhpcy5mb3JlZ3JvdW5kQWxwaGEgPSAxLjA7XG4gICAgICAgIHRoaXMubGV2ZWwgPSAnTCc7XG4gICAgICAgIHRoaXMubWltZSA9ICdpbWFnZS9wbmcnO1xuICAgICAgICB0aGlzLnBhZGRpbmcgPSBudWxsO1xuICAgICAgICB0aGlzLnNpemUgPSAxMDA7XG4gICAgICAgIHRoaXMudmFsdWUgPSAnJztcbiAgICAgICAgdGhpcy5jYW52YXMgPSBmYWxzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSBjaGFuZ2VzXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBRUkNvZGVDb21wb25lbnQucHJvdG90eXBlLm5nT25DaGFuZ2VzID0gZnVuY3Rpb24gKGNoYW5nZXMpIHtcbiAgICAgICAgaWYgKCdiYWNrZ3JvdW5kJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAnYmFja2dyb3VuZEFscGhhJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAnZm9yZWdyb3VuZCcgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ2ZvcmVncm91bmRBbHBoYScgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ2xldmVsJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAnbWltZScgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ3BhZGRpbmcnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdzaXplJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAndmFsdWUnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdjYW52YXMnIGluIGNoYW5nZXMpIHtcbiAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGUoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBRUkNvZGVDb21wb25lbnQucHJvdG90eXBlLmdlbmVyYXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFyIC8qKiBAdHlwZSB7P30gKi8gZWwgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICAgICAgICAgIGVsLmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgdmFyIC8qKiBAdHlwZSB7P30gKi8gcXIgPSBuZXcgUVJpb3VzKHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB0aGlzLmJhY2tncm91bmQsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZEFscGhhOiB0aGlzLmJhY2tncm91bmRBbHBoYSxcbiAgICAgICAgICAgICAgICBmb3JlZ3JvdW5kOiB0aGlzLmZvcmVncm91bmQsXG4gICAgICAgICAgICAgICAgZm9yZWdyb3VuZEFscGhhOiB0aGlzLmZvcmVncm91bmRBbHBoYSxcbiAgICAgICAgICAgICAgICBsZXZlbDogdGhpcy5sZXZlbCxcbiAgICAgICAgICAgICAgICBtaW1lOiB0aGlzLm1pbWUsXG4gICAgICAgICAgICAgICAgcGFkZGluZzogdGhpcy5wYWRkaW5nLFxuICAgICAgICAgICAgICAgIHNpemU6IHRoaXMuc2l6ZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy52YWx1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5jYW52YXMpIHtcbiAgICAgICAgICAgICAgICBlbC5hcHBlbmRDaGlsZChxci5jYW52YXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZWwuYXBwZW5kQ2hpbGQocXIuaW1hZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQ291bGQgbm90IGdlbmVyYXRlIFFSIENvZGU6IFwiICsgZS5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFFSQ29kZUNvbXBvbmVudDtcbn0oKSk7XG5RUkNvZGVDb21wb25lbnQuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcbiAgICAgICAgICAgICAgICBtb2R1bGVJZDogJ21vZHVsZS5pZCcsXG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdxci1jb2RlJyxcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogXCJcIlxuICAgICAgICAgICAgfSxdIH0sXG5dO1xuLyoqXG4gKiBAbm9jb2xsYXBzZVxuICovXG5RUkNvZGVDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgeyB0eXBlOiBFbGVtZW50UmVmLCB9LFxuXTsgfTtcblFSQ29kZUNvbXBvbmVudC5wcm9wRGVjb3JhdG9ycyA9IHtcbiAgICAnYmFja2dyb3VuZCc6IFt7IHR5cGU6IElucHV0IH0sXSxcbiAgICAnYmFja2dyb3VuZEFscGhhJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICdmb3JlZ3JvdW5kJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICdmb3JlZ3JvdW5kQWxwaGEnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG4gICAgJ2xldmVsJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICdtaW1lJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICdwYWRkaW5nJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICdzaXplJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICd2YWx1ZSc6IFt7IHR5cGU6IElucHV0IH0sXSxcbiAgICAnY2FudmFzJzogW3sgdHlwZTogSW5wdXQgfSxdLFxufTtcbnZhciBRUkNvZGVNb2R1bGUgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFFSQ29kZU1vZHVsZSgpIHtcbiAgICB9XG4gICAgcmV0dXJuIFFSQ29kZU1vZHVsZTtcbn0oKSk7XG5RUkNvZGVNb2R1bGUuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IE5nTW9kdWxlLCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtRUkNvZGVDb21wb25lbnRdLFxuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1FSQ29kZUNvbXBvbmVudF1cbiAgICAgICAgICAgIH0sXSB9LFxuXTtcbi8qKlxuICogQG5vY29sbGFwc2VcbiAqL1xuUVJDb2RlTW9kdWxlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW107IH07XG5cbi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0IHsgUVJDb2RlQ29tcG9uZW50LCBRUkNvZGVNb2R1bGUgfTtcbiJdfQ==